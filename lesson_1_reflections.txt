I think it's important to use  version-control to fix bugs because the programmer
can see what is different between versions and go back to previews codes. 

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

Easy access to file history can make me a more efficient programmer in the long term because I can see the progress in
my code, I can see different patters used along the development and I can measure my programming speed. 

What do you think are the pros and cons of manually choosing when to create a commit, 
like you do in Git, vs having versions automatically saved, like Google Docs does? 

Only the programmer knows the right moment to commit his/her work. 

Why do you think some version control systems, like Git, allow saving multiple files in one commit,
while others, like Google Docs, treat each file separately?

Because some code are related with different files for the same feature, for example. 

How can you use the commands git log and git diff to view the history of files?

Log shows the commits in a decreasing order. Diff shows the difference between to commits indicated by its IDs

How might using version control make you more confident to make changes that could break something?

If you do something wrong, you can go back 

Now that you have your workspace set up, what do you want to try using Git for?

I want to develop features on eNabled project :D 
